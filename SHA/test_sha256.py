from random import randint
from sha256 import *
from common import string_to_bytes

def gen_random_msg(len):
    """
    Generate a list of `len` random bytes.
    """
    return [randint(0,256)  for i in range(len)]

def test_pad_msg():
    msg = [0xde, 0xad, 0xbe, 0xef]
    res = pad_msg(msg, 32)
    assert res == [0xde, 0xad, 0xbe, 0xef, 0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x20]

    msg = [0x61, 0x62, 0x63]
    res = pad_msg(msg, 512)
    assert res == [0x61, 0x62, 0x63, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                     0x00, 0x00, 0x00, 0x00, 0x18]

def test_parse_msg():
    msg = [0xde, 0xad, 0xbe, 0xef]
    res = parse_msg(msg, 32)
    assert next(res) == [0xdeadbeef]

    msg = [0xde, 0xad, 0xbe, 0xef, 0xaf, 0xfe, 0x12, 0x34]
    res = parse_msg(msg, 32)
    assert next(res) == [0xdeadbeef]
    assert next(res) == [0xaffe1234]

    msg = [0xde, 0xad, 0xbe, 0xef, 0xaf, 0xfe, 0x12, 0x34,
           0xfe, 0xa4, 0x4e, 0xe1, 0x2f, 0xf1, 0x72, 0x14,
           0x5e, 0xa2, 0xb5, 0x1f, 0xa1, 0xce, 0x42, 0x44,
           0xae, 0xa1, 0xb2, 0xed, 0x5f, 0x2e, 0x19, 0x74]
    res = parse_msg(msg, 64)
    assert next(res) == [0xdeadbeef,0xaffe1234]
    assert next(res) == [0xfea44ee1,0x2ff17214]
    assert next(res) == [0x5ea2b51f,0xa1ce4244]
    assert next(res) == [0xaea1b2ed,0x5f2e1974]

def test_sha256():
    msg = string_to_bytes("abc")
    h = sha256(msg)
    assert h == 0xBA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD

    msg = string_to_bytes("abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq")
    h = sha256(msg)
    assert h == 0x248d6a61d20638b8e5c026930c3e6039a33ce45964ff2167f6ecedd419db06c1

    msg = string_to_bytes("abcdefghbcdefghicdefghijdefghijkefghijklfghijklmghijklmnhijklmnoijklmnopjklmnopqklmnopqrlmnopqrsmnopqrstnopqrstu")
    h = sha256(msg)
    assert h == 0xcf5b16a778af8380036ce59e7b0492370b249b11e8f07a51afac45037afee9d1

    # 1024 bit message
    msg = string_to_bytes("9l5mXBb7Lprxjzb62CEvl2rBWGoFa5dmE45TmMFPQyjgM4wgZy2rmAK51sSCAAzcw5bw1S4k5MG8PZJr1lr6ZPdjPIzhHZnH79qvLcbBPFbkgF8l1HCL9FNKQMJ8aqyl")
    h = sha256(msg)
    assert h == 0x60342523c09563657e7063cb2ec72dd32bf57318c18e6410eb7a538b63906250